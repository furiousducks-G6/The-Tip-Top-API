image: docker:latest

services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay2
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  DOCKER_REGISTRY: docker.io

stages:
  - build
  - test
  - report
  - docker
  - deploy

# Étape de construction
build:
  stage: build
  script:
    - echo "Building application..."
    - # Commandes de construction, comme composer install pour Symfony

# Étape des tests
test:
  stage: test
  script:
    - echo "Running tests..."
    - vendor/bin/phpunit --coverage-text
  artifacts:
    reports:
      junit: junit.xml
    paths:
      - coverage/
    expire_in: 1 week

# Stockage des rapports de tests
report:
  stage: report
  script:
    - echo "Storing test reports..."
    - mkdir -p reports
    - cp -r coverage/ reports/
  artifacts:
    paths:
      - reports/
    expire_in: 1 week

# Création de l'image Docker
docker_build:
  stage: docker
  script:
    - echo "Building Docker image..."
    - docker build -t $IMAGE_TAG .
    - docker tag $IMAGE_TAG $DOCKER_REGISTRY/$CI_PROJECT_NAME:$CI_COMMIT_REF_SLUG
    - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD $DOCKER_REGISTRY
    - docker push $DOCKER_REGISTRY/$CI_PROJECT_NAME:$CI_COMMIT_REF_SLUG
  only:
    - main

# Déploiement
deploy_preprod:
  stage: deploy
  script:
    - echo "Deploying to preproduction..."
    - ssh user@preprod-server 'docker pull $DOCKER_REGISTRY/$CI_PROJECT_NAME:$CI_COMMIT_REF_SLUG && docker run -d --rm --name myapp $DOCKER_REGISTRY/$CI_PROJECT_NAME:$CI_COMMIT_REF_SLUG'
  only:
    - main

deploy_prod:
  stage: deploy
  script:
    - echo "Deploying to production..."
    - ssh user@prod-server 'docker pull $DOCKER_REGISTRY/$CI_PROJECT_NAME:$CI_COMMIT_REF_SLUG && docker run -d --rm --name myapp $DOCKER_REGISTRY/$CI_PROJECT_NAME:$CI_COMMIT_REF_SLUG'
  only:
    - tags
