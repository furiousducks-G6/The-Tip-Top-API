pipeline {
    agent any

    environment {
        // Définir les variables d'environnement nécessaires pour votre pipeline
        PATH_TO_SYMFONY = './bin/console'
        DOCKER_IMAGE = 'php:8.2-cli'  // Version Docker de PHP adaptée à Symfony
    }

    stages {
        stage('Checkout') {
            steps {
                // Étape pour récupérer le code depuis votre repository Git (par exemple GitHub)
                git 'https://github.com/furiousducks-G6/The-Tip-Top-API.git'
            }
        }

        stage('Build') {
            steps {
                // Étape pour installer les dépendances Symfony et API Platform
                sh "composer install --no-interaction --prefer-dist"

                // Exécuter les migrations de base de données si nécessaire
                sh "${PATH_TO_SYMFONY} doctrine:migrations:migrate --no-interaction"
            }
        }

        stage('Run Tests') {
            steps {
                // Exécuter les tests unitaires Symfony
                sh "${PATH_TO_SYMFONY} phpunit"
            }
        }

        stage('Deploy') {
            steps {
                // Exemple de déploiement vers un serveur distant (adapter selon votre configuration)
                // Utilisation d'un conteneur Docker pour l'environnement de déploiement
                sh "docker run --rm -v \$(pwd):/app -w /app ${DOCKER_IMAGE} ${PATH_TO_SYMFONY} deploy"
            }
        }
    }

    post {
        always {
            // Exécuté à la fin de chaque pipeline, quelle que soit l'issue
            archiveArtifacts artifacts: '**/target/*.jar', allowEmptyArchive: true

            // Notification par email en cas d'échec du pipeline
            emailext (
                subject: "Pipeline ${currentBuild.result}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                body: "Pipeline ${currentBuild.result}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'\n\n${BUILD_URL}",
                to: "tchantchoisaac1997@gmail.com",
            )
        }
    }
}
